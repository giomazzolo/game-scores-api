services:

# This is a Docker Compose file for a Go API with Postgres, Prometheus, and Grafana

  # Service for the Go API
  api:
    build: .
    ports:
      - "8080:8080"
    environment:
      - DB_SOURCE=postgresql://user:mysecretpassword@db:5432/mydatabase?sslmode=disable
      # To run locally: $env:DB_SOURCE="postgresql://user:mysecretpassword@localhost:5433/mydatabase?sslmode=disable"
      # Port has changed to 5433 to avoid conflicts with a local Postgres instance

      - JWT_SECRET_KEY=secreto_super_largo_y_mega_seguro_imposible_de_hackear_viva_meli

    depends_on: # This now waits for the db to be "healthy" to avoid connection issues (connecting before Postgres is ready)
      db:
        condition: service_healthy

  # Service for Postgres database
  db:
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=mydatabase
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    
    healthcheck: # This healthcheck tells Docker to keep checking if Postgres is ready
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 2s
      timeout: 1s
      retries: 10

  # Service for Prometheus
  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      # Mount a custom config file into the container
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - api

  # Service for Grafana
  grafana:
    image: grafana/grafana:9.5.3
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  postgres_data: